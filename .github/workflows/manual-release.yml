name: "Publish on release"
on:
  release:
    types:
      - created
jobs:
  build:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'djonser' }}
    outputs:
      working_commit: "${{ steps.working_commit.outputs.value }}"
      next_version: "${{ steps.next_version.outputs.value }}"
    steps:
      - name: "Clone"
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: "Install"
        run: |
          npm ci

      - name: "Lint"
        run: npm run eslint

      - name: "Test"
        run: |
          npm run test

      - name: "Build"
        run: npm run build

      - id: working_commit
        name: "Most recent commit"
        run: |
          workingCommit=$(git ls-remote origin -h ${{ github.ref }} | cut -f1)
          echo "value=$workingCommit" >> $GITHUB_OUTPUT

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        if: ${{ steps.working_commit.outputs.value == github.sha }}
        with:
          name: build-artifact
          path: dist
      - name: Next version
        id: next_version
        run: |
          nextVersion=$(git describe --tags --abbrev=0 --match='v[0-9].[0-9]*.[0-9]*')
          
          if echo "$nextVersion" | grep -Eqv "^v[0-9].[0-9]{1,}.[0-9]+$"; then
            echo "Error resolving version"
            exit 1
          fi
          
          echo "value=$nextVersion" >> "$GITHUB_OUTPUT"
  publish:
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: read
      id-token: write
    if: ${{ needs.build.outputs.working_commit == github.sha }}
    steps:
      - uses: actions/checkout@v4
      - name: Set Version
        run: |
          nextVersion="${{ needs.build.outputs.next_version }}"
          packageVersion=${nextVersion:1}
          packageJson=$(cat package.json | jq --arg newVersion "$packageVersion"  'select(.version) | .version = $newVersion')
          echo "$packageJson" > package.json

      - uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: dist

      - name: Publish
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
